---
layout: post
draft: True
---

The motivation for this project is I wanted a non-intrusive way to log external (http) API requests in Python. I investigated solutions such as New Relic but I couldn't find an existing tool which would log all the request and response data I wanted to capture.

## Approach
I thought a clean way to capture http(s) requests would be by using the Python logging module. However this has the limitation that it doesn't show the data returned from the server # https://stackoverflow.com/questions/10588644/how-can-i-see-the-entire-http-request-thats-being-sent-by-my-python-application.

Other solutions:
- Monkey patch requests
- Use a proxy
- Use a packet logger, wireshark, etc
- Do something on the OS networking level
- Do something montioring networking between containers
- Do something on the AWS level

For the first version I've chosen to go with monkey patching the requests library, form experimenting I've found monkey patching the standard library is possible if required.

<a href="#" id="click_me">Get Started</a>

<div id="question">
    <h1>Which do you like best?</h1>

    <a href="#" id="dogs">dogs</a>
    <a href="#" id="cats">cats</a>
</div>

<script type="text/javascript">
    var el = document.getElementById('click_me');
    el.onclick = function() {
        console.log(ga);
        ga('send', 'pageview', 'get-started');
        // Todo make question div visible here
        return false;
    };

    var el = document.getElementById('dogs');
    el.onclick = function() {
        ga('send', 'pageview', 'dogs');
        return false;
    };

    var el = document.getElementById('cats');
    el.onclick = function() {
        ga('send', 'pageview', 'cats');
        return false;
    };
</script>